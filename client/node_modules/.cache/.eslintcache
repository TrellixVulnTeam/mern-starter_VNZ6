[{"/Users/mymac/repos/mern-boilerplate/client/src/index.js":"1","/Users/mymac/repos/mern-boilerplate/client/src/App.js":"2","/Users/mymac/repos/mern-boilerplate/client/src/components/shared/NavBar.js":"3","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/About.js":"4","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/Home.js":"5","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/SignUp.js":"6","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/LogIn.js":"7","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/Posts.js":"8","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/Form/Form.js":"9","/Users/mymac/repos/mern-boilerplate/client/src/actions/posts.js":"10","/Users/mymac/repos/mern-boilerplate/client/src/api/index.js":"11","/Users/mymac/repos/mern-boilerplate/client/src/reducers/index.js":"12","/Users/mymac/repos/mern-boilerplate/client/src/reducers/posts.js":"13","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/PostsList/PostsList.js":"14","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/PostsList/PostListItem/PostListItem.js":"15","/Users/mymac/repos/mern-boilerplate/client/src/reducers/auth.js":"16","/Users/mymac/repos/mern-boilerplate/client/src/actions/auth.js":"17","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/LogOut.js":"18","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/Post/Post.js":"19","/Users/mymac/repos/mern-boilerplate/client/src/reducers/post.js":"20","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/Account.js":"21","/Users/mymac/repos/mern-boilerplate/client/src/actions/users.js":"22","/Users/mymac/repos/mern-boilerplate/client/src/reducers/user.js":"23","/Users/mymac/repos/mern-boilerplate/client/src/types/index.js":"24","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/EditPost.js":"25","/Users/mymac/repos/mern-boilerplate/client/src/components/shared/Footer.js":"26","/Users/mymac/repos/mern-boilerplate/client/src/reducers/flashMessages.js":"27","/Users/mymac/repos/mern-boilerplate/client/src/components/shared/FlashMessages.js":"28","/Users/mymac/repos/mern-boilerplate/client/src/actions/messages.js":"29","/Users/mymac/repos/mern-boilerplate/client/src/actions/helpers.js":"30"},{"size":615,"mtime":1619161972186,"results":"31","hashOfConfig":"32"},{"size":1907,"mtime":1619249822594,"results":"33","hashOfConfig":"32"},{"size":1677,"mtime":1619176649403,"results":"34","hashOfConfig":"32"},{"size":140,"mtime":1619019093807,"results":"35","hashOfConfig":"32"},{"size":644,"mtime":1619191963131,"results":"36","hashOfConfig":"32"},{"size":1882,"mtime":1619268505211,"results":"37","hashOfConfig":"32"},{"size":1557,"mtime":1619163790673,"results":"38","hashOfConfig":"32"},{"size":336,"mtime":1619182200235,"results":"39","hashOfConfig":"32"},{"size":2371,"mtime":1619097766038,"results":"40","hashOfConfig":"32"},{"size":1937,"mtime":1619330720284,"results":"41","hashOfConfig":"32"},{"size":1499,"mtime":1619272806144,"results":"42","hashOfConfig":"32"},{"size":323,"mtime":1619247613763,"results":"43","hashOfConfig":"32"},{"size":377,"mtime":1619187321363,"results":"44","hashOfConfig":"32"},{"size":419,"mtime":1619098688840,"results":"45","hashOfConfig":"32"},{"size":1263,"mtime":1619191029732,"results":"46","hashOfConfig":"32"},{"size":341,"mtime":1619187162631,"results":"47","hashOfConfig":"32"},{"size":600,"mtime":1619268279225,"results":"48","hashOfConfig":"32"},{"size":414,"mtime":1619164849478,"results":"49","hashOfConfig":"32"},{"size":1244,"mtime":1619191103585,"results":"50","hashOfConfig":"32"},{"size":249,"mtime":1619190524981,"results":"51","hashOfConfig":"32"},{"size":1795,"mtime":1619189905260,"results":"52","hashOfConfig":"32"},{"size":1113,"mtime":1619268122912,"results":"53","hashOfConfig":"32"},{"size":220,"mtime":1619184012934,"results":"54","hashOfConfig":"32"},{"size":502,"mtime":1619249615488,"results":"55","hashOfConfig":"32"},{"size":1521,"mtime":1619190951813,"results":"56","hashOfConfig":"32"},{"size":164,"mtime":1619247705816,"results":"57","hashOfConfig":"32"},{"size":758,"mtime":1619249909568,"results":"58","hashOfConfig":"32"},{"size":853,"mtime":1619276896113,"results":"59","hashOfConfig":"32"},{"size":161,"mtime":1619249317410,"results":"60","hashOfConfig":"32"},{"size":515,"mtime":1619268240963,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"cnxkyh",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/mymac/repos/mern-boilerplate/client/src/index.js",[],["136","137"],"/Users/mymac/repos/mern-boilerplate/client/src/App.js",["138"],"import './App.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Posts from './components/posts/Posts';\nimport Account from './components/pages/Account';\nimport SignUp from './components/pages/SignUp';\nimport LogIn from './components/pages/LogIn';\nimport LogOut from './components/pages/LogOut';\nimport NavBar from './components/shared/NavBar';\nimport Footer from './components/shared/Footer';\nimport Post from './components/posts/Post/Post';\nimport { getPosts } from './actions/posts';\nimport EditPost from './components/posts/EditPost';\nimport FlashMessages from './components/shared/FlashMessages';\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  // @ts-ignore\n  const auth = useSelector((state) => state.auth );\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <Router>\n          <NavBar />\n          <div className=\"body container\">\n            <FlashMessages />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/login\" component={LogIn} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <Route exact path=\"/logout\" component={LogOut} />\n              <Route path=\"/posts/:id/edit\" component={EditPost}/>\n              <Route exact path=\"/posts\" component={Posts} />\n              <Route path=\"/posts/:id\" component={Post} />\n              <Route exact path=\"/account\" component={Account} />\n            </Switch>\n          </div>\n          <Footer />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mymac/repos/mern-boilerplate/client/src/components/shared/NavBar.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/components/pages/About.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/components/pages/Home.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/components/pages/SignUp.js",["139"],"import React, { useState, useEffect } from 'react';\nimport { createUser } from '../../actions/users';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst SignUp = ({ history }) => {\n\n  const dispatch = useDispatch();\n  // @ts-ignore\n  const auth = useSelector((state) => state.auth);\n  useEffect(() => {\n    if (auth) { history.push(\"/\"); }\n  }, [auth]);\n\n  const [formData, setFormData] = useState ({\n    email: \"\",\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(createUser(formData));\n  }\n\n  return (\n    <div>\n      <h1>Sign up</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email address</label>\n          <input onChange={(e) => setFormData({ ...formData, email: e.target.value.trim()})} value={formData.email} type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input onChange={(e) => setFormData({ ...formData, username: e.target.value.trim()})} value={formData.username} type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter email\"/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input onChange={(e) => setFormData({ ...formData, password: e.target.value.trim()})} value={formData.password} type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp; ","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/LogIn.js",["140"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../actions/auth';\n\nconst LogIn = ({ history}) => {\n\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const [formData, setFormData] = useState ({\n    email: \"\",\n    password: \"\"\n  });\n\n  // When auth changes, check to see if the user is logged in,\n  // if so redirect to the home page\n  useEffect(() => {\n    if (auth) { history.push(\"/\"); }\n  }, [auth]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(logIn(formData)) \n  }\n\n  return (\n    <div>\n      <h1>Log in</h1>\n      <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n          <label htmlFor=\"email\">Email address</label>\n          <input onChange={(e) => setFormData({ ...formData, email: e.target.value})} value={formData.email} type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input onChange={(e) => setFormData({ ...formData, password: e.target.value})} value={formData.password} type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\" />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LogIn; ","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/Posts.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/components/posts/Form/Form.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/actions/posts.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/api/index.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/reducers/index.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/reducers/posts.js",["141"],"import { FETCH_POSTS, CREATE_POST, DELETE_POST } from '../types/index';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return action.payload;\n    case CREATE_POST:\n      return [...posts, action.payload];\n    case DELETE_POST:\n      return posts.filter(post => post._id !== action.payload);\n    default:\n      return posts;\n  }\n}","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/PostsList/PostsList.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/components/posts/PostsList/PostListItem/PostListItem.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/reducers/auth.js",["142"],"import { LOG_IN, CREATE_USER, LOG_OUT } from '../types';\n\nconst defaultState = JSON.parse(localStorage.getItem('auth'));\n\nexport default (auth = defaultState, action ) => {\n  switch (action.type) {\n    case LOG_IN:\n    case CREATE_USER:\n      return action.payload;\n    case LOG_OUT:\n      return null;\n    default:\n      return auth;\n  }\n\n}","/Users/mymac/repos/mern-boilerplate/client/src/actions/auth.js",["143","144"],"import * as api from '../api';\nimport { LOG_IN, LOG_OUT, ADD_FLASH_MESSAGE} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\nexport const logIn = (logInData) => async (dispatch) => {\n  try {\n    const { data } = await api.logIn(logInData);\n    localStorage.setItem('auth', JSON.stringify(data))\n    dispatch({\n      type: LOG_IN,\n      payload: data\n    });\n  } catch (error) {\n    errorFlashMessage(error, dispatch, \"danger\")\n  }\n}\n\nexport const logOut = () => async (dispatch) => {\n  localStorage.removeItem('auth');\n  dispatch({\n    type: LOG_OUT\n  });\n}","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/LogOut.js",["145"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../actions/auth';\nconst LogOut = ({ history }) => {\n\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(logOut());\n    history.push(\"/login\");\n  }, [auth]);\n\n  return (\n    <div>Log out</div>\n  )\n}\n\nexport default LogOut;","/Users/mymac/repos/mern-boilerplate/client/src/components/posts/Post/Post.js",["146"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPost, deletePost } from '../../../actions/posts';\nimport { Trash, PencilSquare } from 'react-bootstrap-icons';\n\nconst Post = ({ match }) => {\n\n  const dispatch = useDispatch();\n  const post = useSelector((state) => state.post);\n  const auth = useSelector((state) => state.auth);\n  useEffect(() => {\n    dispatch(getPost(match.params.id));\n  }, [])\n\n\n  const handleDelete = () => {\n    const confirm = window.confirm(\"Are you sure you want to delete this post?\");\n    if (confirm) {\n      dispatch(deletePost(post._id))\n    }\n  }\n\n  const renderAuthorButtons = () => {\n    if (auth && post.userUsername === auth.user.username) {\n      return <div className=\"float-right\">\n                <Trash onClick={handleDelete} className=\"hover mr-3\" />\n                <Link to={`/posts/${post._id}/edit`}><PencilSquare className=\"hover\"/></Link> \n              </div>\n    }\n  }\n\n  return (\n    <div className=\"post-page\"> \n    {post && (\n      <div>\n        {renderAuthorButtons()}\n        <h1>{post.title}</h1>\n        <p>{post.body}</p>\n      </div>\n      )}\n      </div>\n\n  )\n}\n\nexport default Post;","/Users/mymac/repos/mern-boilerplate/client/src/reducers/post.js",["147"],"// @ts-ignore\nimport { FETCH_POST, UPDATE_POST } from '../types/index';\n\nexport default (post = null, action) => {\n  switch (action.type) {\n    case FETCH_POST:\n    case UPDATE_POST:\n      return action.payload;\n    default:\n      return post;\n  }\n}","/Users/mymac/repos/mern-boilerplate/client/src/components/pages/Account.js",["148"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser, updateUser } from '../../actions/users';\n\nconst Account = ({ history, match }) => {\n\n  const user = useSelector((state) => state.user);\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  \n  const [formData, setFormData] = useState ({\n    email: \"\",\n    username: \"\"\n  });\n\n  useEffect(() => {\n    dispatch(getUser(auth.user._id));\n  }, []);\n\n  if (user && formData.username === \"\" && formData.email === \"\") {\n    setFormData({\n      email: user.email,\n      username: user.username\n    });\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(updateUser(auth.user._id, formData));\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"user-page\">\n      {user && (\n        <div>\n          <h1>Edit Profile</h1>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email address</label>\n              <input onChange={(e) => setFormData({ ...formData, email: e.target.value})} value={formData.email} type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input onChange={(e) => setFormData({ ...formData, username: e.target.value})} value={formData.username} type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter email\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n          </form>\n        </div> \n      )}\n    </div>\n  );\n}\n\n\nexport default Account;","/Users/mymac/repos/mern-boilerplate/client/src/actions/users.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/reducers/user.js",["149"],"export default (user = null, action ) => {\n  switch (action.type) {\n    case \"FETCH_USER\":\n    case \"UPDATE_USER\":\n      return action.payload;\n    case \"LOG_OUT\":\n      return null;\n    default:\n      return user;\n  }\n}","/Users/mymac/repos/mern-boilerplate/client/src/types/index.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/components/posts/EditPost.js",["150"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPost, updatePost } from '../../actions/posts';\n\nconst EditPost = ({ match, history}) => {\n\n  const [formData, setFormData] = useState({\n    title: \"\",\n    body: \"\"\n  })\n\n  const dispatch = useDispatch();\n  const post = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch(getPost(match.params.id));\n  }, [])\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(updatePost(match.params.id, formData));\n    history.push(`posts/${post._id}`)\n  }\n\n  if (post && formData.title === \"\" && formData.body === \"\") {\n    setFormData({\n      title: post.title,\n      body: post.body\n    });\n  }\n\n  return (\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input onChange={(e) => setFormData({ ...formData, title: e.target.value})} value={formData.title}className=\"form-control\" id=\"email\" aria-describedby=\"title\"/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"body\">Body</label>\n            <textarea \n            onChange={(e) => setFormData({ ...formData, body: e.target.value})}\n            value={formData.body} className=\"form-control\" id=\"body\" rows=\"3\"></textarea>\n          </div>\n           <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n        </form>\n\n      </div>\n  )\n}\n\nexport default EditPost;","/Users/mymac/repos/mern-boilerplate/client/src/components/shared/Footer.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/reducers/flashMessages.js",["151"],"import { LOG_IN, LOG_OUT, DELETE_POST, UPDATE_POST, CLEAR_MESSAGES, ADD_FLASH_MESSAGE } from '../types/index';\n\nexport default (flashMessages = [], action ) => {\n  switch (action.type) {\n    case LOG_IN:\n      return [...flashMessages, {type: 'success', message: \"You are now logged in.\"}]\n    case LOG_OUT:\n      return [...flashMessages, {type: 'success', message: \"You are now logged out.\"}]\n    case DELETE_POST:\n      return [...flashMessages, {type: 'success', message: \"Post deleted.\"}]\n    case UPDATE_POST:\n      return [...flashMessages, {type: 'success', message: \"Post updated.\"}]\n    case ADD_FLASH_MESSAGE:\n      return [...flashMessages, action.payload]\n    case CLEAR_MESSAGES:\n      return [];\n    default:\n      return flashMessages;\n  }\n\n}","/Users/mymac/repos/mern-boilerplate/client/src/components/shared/FlashMessages.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/actions/messages.js",[],"/Users/mymac/repos/mern-boilerplate/client/src/actions/helpers.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":29,"column":9,"nodeType":"158","messageId":"159","endLine":29,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":12,"column":6,"nodeType":"162","endLine":12,"endColumn":12,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"161","line":18,"column":6,"nodeType":"162","endLine":18,"endColumn":12,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":1,"nodeType":"167","endLine":14,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":5,"column":1,"nodeType":"167","endLine":16,"endColumn":2},{"ruleId":"156","severity":1,"message":"168","line":2,"column":27,"nodeType":"158","messageId":"159","endLine":2,"endColumn":44},{"ruleId":"156","severity":1,"message":"169","line":3,"column":29,"nodeType":"158","messageId":"159","endLine":3,"endColumn":44},{"ruleId":"160","severity":1,"message":"170","line":12,"column":6,"nodeType":"162","endLine":12,"endColumn":12,"suggestions":"171"},{"ruleId":"160","severity":1,"message":"172","line":14,"column":6,"nodeType":"162","endLine":14,"endColumn":8,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"166","line":4,"column":1,"nodeType":"167","endLine":12,"endColumn":2},{"ruleId":"160","severity":1,"message":"174","line":18,"column":6,"nodeType":"162","endLine":18,"endColumn":8,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","endLine":11,"endColumn":2},{"ruleId":"160","severity":1,"message":"172","line":17,"column":6,"nodeType":"162","endLine":17,"endColumn":8,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":1,"nodeType":"167","endLine":21,"endColumn":2},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["179"],["180"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ADD_FLASH_MESSAGE' is defined but never used.","'addFlashMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'auth.user._id' and 'dispatch'. Either include them or remove the dependency array.",["183"],["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"185","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"190","fix":"194"},"Update the dependencies array to be: [auth, history]",{"range":"195","text":"196"},{"range":"197","text":"196"},"Update the dependencies array to be: [auth, dispatch, history]",{"range":"198","text":"199"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"200","text":"201"},"Update the dependencies array to be: [auth.user._id, dispatch]",{"range":"202","text":"203"},{"range":"204","text":"201"},[357,363],"[auth, history]",[518,524],[341,347],"[auth, dispatch, history]",[495,497],"[dispatch, match.params.id]",[498,500],"[auth.user._id, dispatch]",[441,443]]