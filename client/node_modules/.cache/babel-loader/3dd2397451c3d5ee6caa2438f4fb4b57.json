{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/issue-tracker-mern/client/src/components/issues/IssuesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport IssueListItem from './IssueListItem';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IssuesList = ({\n  issues\n}) => {\n  _s();\n\n  const issuesPerPage = 5;\n  let [itemsToRender, setItemsToRender] = useState([]);\n  let currentPage = 0;\n  const pageCount = Math.ceil(issues.length / issuesPerPage);\n\n  const renderItems = () => {\n    return itemsToRender.map(issue => {\n      return /*#__PURE__*/_jsxDEV(IssueListItem, {\n        issue: issue\n      }, issue._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    currentPage = selected;\n    setItemsToRender(issues.slice(selected * issuesPerPage, selected * issuesPerPage + issuesPerPage));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderItems(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: pageCount,\n      pageRangeDisplayed: pageCount,\n      marginPagesDisplayed: 1,\n      containerClassName: \"pagination\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      activeClassName: \"active\",\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IssuesList, \"q6jH3RG6nLiNmXSt/3KMvsnkaw0=\");\n\n_c = IssuesList;\nexport default IssuesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssuesList\");","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/components/issues/IssuesList.js"],"names":["React","useState","IssueListItem","ReactPaginate","IssuesList","issues","issuesPerPage","itemsToRender","setItemsToRender","currentPage","pageCount","Math","ceil","length","renderItems","map","issue","_id","handlePageChange","selected","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACjC,QAAMC,aAAa,GAAG,CAAtB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAIQ,WAAW,GAAG,CAAlB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUP,MAAM,CAACQ,MAAP,GAAgBP,aAA1B,CAAlB;;AAGA,QAAMQ,WAAW,GAAG,MAAM;AACxB,WAAOP,aAAa,CAACQ,GAAd,CAAkBC,KAAK,IAAI;AAChC,0BAAO,QAAC,aAAD;AAA+B,QAAA,KAAK,EAAEA;AAAtC,SAAoBA,KAAK,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAgB;AACvCV,IAAAA,WAAW,GAAGU,QAAd;AACAX,IAAAA,gBAAgB,CAACH,MAAM,CAACe,KAAP,CAAaD,QAAQ,GAAGb,aAAxB,EAAwCa,QAAQ,GAAGb,aAAZ,GAA6BA,aAApE,CAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAA,eACOQ,WAAW,EADlB,eAEM;AAAA;AAAA;AAAA;AAAA,YAFN,eAGM,QAAC,aAAD;AACA,MAAA,SAAS,EAAEJ,SADX;AAEA,MAAA,kBAAkB,EAAEA,SAFpB;AAGA,MAAA,oBAAoB,EAAE,CAHtB;AAIA,MAAA,kBAAkB,EAAC,YAJnB;AAKA,MAAA,aAAa,EAAC,WALd;AAMA,MAAA,iBAAiB,EAAC,WANlB;AAOA,MAAA,iBAAiB,EAAC,WAPlB;AAQA,MAAA,qBAAqB,EAAC,WARtB;AASA,MAAA,aAAa,EAAC,WATd;AAUA,MAAA,iBAAiB,EAAC,WAVlB;AAWA,MAAA,eAAe,EAAC,QAXhB;AAYA,MAAA,YAAY,EAAEQ;AAZd;AAAA;AAAA;AAAA;AAAA,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtCD;;GAAMd,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport IssueListItem from './IssueListItem';\nimport ReactPaginate from 'react-paginate';\n\nconst IssuesList = ({ issues }) => {\n  const issuesPerPage = 5;\n  let [itemsToRender, setItemsToRender] = useState([]);\n  let currentPage = 0; \n  const pageCount = Math.ceil(issues.length / issuesPerPage);\n  \n\n  const renderItems = () => {\n    return itemsToRender.map(issue => {\n      return <IssueListItem key={issue._id} issue={issue} />\n    })\n  }\n\n  const handlePageChange = ({selected}) => {\n    currentPage = selected;\n    setItemsToRender(issues.slice(selected * issuesPerPage, (selected * issuesPerPage) + issuesPerPage));\n  }\n\n  return (\n    <div>\n          {renderItems()}\n          <br />\n          <ReactPaginate\n          pageCount={pageCount}\n          pageRangeDisplayed={pageCount}\n          marginPagesDisplayed={1}\n          containerClassName=\"pagination\"\n          pageClassName=\"page-item\"\n          pageLinkClassName=\"page-link\"\n          previousClassName=\"page-item\"\n          previousLinkClassName=\"page-link\"\n          nextClassName=\"page-item\"\n          nextLinkClassName=\"page-link\"\n          activeClassName=\"active\"\n          onPageChange={handlePageChange}\n          />\n    </div>\n  )\n}\n\nexport default IssuesList\n"]},"metadata":{},"sourceType":"module"}