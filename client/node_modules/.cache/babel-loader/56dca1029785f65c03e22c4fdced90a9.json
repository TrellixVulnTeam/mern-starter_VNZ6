{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_POSTS, FETCH_POST, CREATE_POST, DELETE_POST, UPDATE_POST } from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_POSTS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const getPost = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost(postId);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const createPost = post => async (dispatch, getState) => {\n  try {\n    const response = await api.createPost(post, getState().auth.token);\n    console.log(\"DATA\");\n    console.log(response);\n    dispatch({\n      type: CREATE_POST,\n      payload: response\n    });\n    addFlashMessage(\"Post successfully created.\", dispatch);\n  } catch (error) {\n    console.log(error); //errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const updatePost = (postId, postParams) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.updatePost(postId, postParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_POST,\n      payload: data\n    });\n    addFlashMessage(\"Post successfully updated.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const deletePost = postId => async (dispatch, getState) => {\n  try {\n    console.log(getState().auth.token);\n    await api.deletePost(postId, getState().auth.token);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    addFlashMessage(\"Post successfully deleted.\", dispatch);\n  } catch (error) {\n    console.log(error); //errorFlashMessage(error, dispatch, \"danger\");\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/mern-boilerplate/client/src/actions/posts.js"],"names":["api","FETCH_POSTS","FETCH_POST","CREATE_POST","DELETE_POST","UPDATE_POST","errorFlashMessage","addFlashMessage","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","getPost","postId","fetchPost","createPost","post","getState","response","auth","token","updatePost","postParams","deletePost"],"mappings":"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","sourcesContent":["import * as api from '../api';\nimport { FETCH_POSTS, FETCH_POST, CREATE_POST, DELETE_POST, UPDATE_POST} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_POSTS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const getPost = (postId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPost(postId);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const createPost = (post) => async (dispatch, getState) => {\n  try {\n    \n    const response = await api.createPost(post, getState().auth.token);\n    console.log(\"DATA\")\n    console.log(response)\n    dispatch({\n      type: CREATE_POST,\n      payload: response\n    });\n    addFlashMessage(\"Post successfully created.\", dispatch)\n  } catch (error) {\n    console.log(error)\n    //errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const updatePost = (postId, postParams) => async (dispatch, getState) => {\n  try {\n  \n    const { data } = await api.updatePost(postId, postParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_POST,\n      payload: data\n    });\n    addFlashMessage(\"Post successfully updated.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const deletePost = (postId) => async (dispatch, getState) => {\n  try {\n    console.log(getState().auth.token)\n    await api.deletePost(postId, getState().auth.token);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    addFlashMessage(\"Post successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    //errorFlashMessage(error, dispatch, \"danger\");\n  }\n}"]},"metadata":{},"sourceType":"module"}