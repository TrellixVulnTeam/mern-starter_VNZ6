{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/issue-tracker-mern/client/src/components/organizations/Organization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOrganization } from '../../actions/organizations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Organization = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const orgId = props.match.params.id;\n  const organization = useSelector(state => state.organization);\n  useEffect(() => {\n    dispatch(getOrganization(orgId));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"organization-page\",\n    children: \"Organizationn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Organization, \"YBKAbA4G5FvEH3Hd1pRs0/Wu12E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Organization;\nexport default Organization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Organization\");","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/components/organizations/Organization.js"],"names":["React","useEffect","useDispatch","useSelector","getOrganization","Organization","props","dispatch","orgId","match","params","id","organization","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAjC;AACA,QAAMC,YAAY,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACH,eAAe,CAACI,KAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMH,Y;UAEaH,W,EAEIC,W;;;KAJjBE,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getOrganization } from '../../actions/organizations';\n\nconst Organization = (props) => {\n\n  const dispatch = useDispatch();\n  const orgId = props.match.params.id;\n  const organization = useSelector(state => state.organization)\n  useEffect(() => {\n    dispatch(getOrganization(orgId));\n  }, [])\n  \n  \n  return (\n    <div className=\"organization-page\">\n      Organizationn\n    </div>\n  )\n}\n\nexport default Organization;"]},"metadata":{},"sourceType":"module"}