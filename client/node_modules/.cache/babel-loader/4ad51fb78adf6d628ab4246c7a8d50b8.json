{"ast":null,"code":"var _JSON$parse;\n\nimport axios from 'axios'; // set token\n\nlet token = (_JSON$parse = JSON.parse(localStorage.getItem('auth'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\nlet config = null;\n\nif (token) {\n  config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n}\n\nconst BASEURL = 'http://localhost:5000';\nconst postsURL = `${BASEURL}/posts`;\nconst logInURL = `${BASEURL}/auth/login`;\nconst usersURL = `${BASEURL}/users`;\nexport const fetchPosts = () => axios.get(postsURL);\nexport const fetchPost = postId => axios.get(`${postsURL}/${postId}`);\nexport const createPost = newPost => axios.post(postsURL, newPost, config);\nexport const updatePost = (postId, postParams) => axios.post(`${postsURL}/${postId}`, postParams, config);\nexport const deletePost = postId => axios.delete(`${postsURL}/${postId}`, config);\nexport const logIn = logInData => axios.post(logInURL, logInData);\nexport const fetchLoggedInUser = userId => axios.get(`${usersURL}/${userId}`);\nexport const updateUser = (userId, userParams) => axios.patch(`${usersURL}/${userId}`, userParams, config);\nexport const createUser = userParams => axios.post(usersURL, userParams);","map":{"version":3,"sources":["/Users/mymac/repos/mern-boilerplate/client/src/api/index.js"],"names":["axios","token","JSON","parse","localStorage","getItem","config","headers","BASEURL","postsURL","logInURL","usersURL","fetchPosts","get","fetchPost","postId","createPost","newPost","post","updatePost","postParams","deletePost","delete","logIn","logInData","fetchLoggedInUser","userId","updateUser","userParams","patch","createUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,IAAIC,KAAK,kBAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAH,gDAAG,YAA0CJ,KAAtD;AACA,IAAIK,MAAM,GAAG,IAAb;;AACA,IAAIL,KAAJ,EAAW;AACTK,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,EAAE;AACP,sBAAgBN;AADT;AADF,GAAT;AAKD;;AAED,MAAMO,OAAO,GAAG,uBAAhB;AAEA,MAAMC,QAAQ,GAAG,GAAED,OAAQ,QAA3B;AAEA,MAAME,QAAQ,GAAI,GAAEF,OAAQ,aAA5B;AAEA,MAAMG,QAAQ,GAAI,GAAEH,OAAQ,QAA5B;AAEA,OAAO,MAAMI,UAAU,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUJ,QAAV,CAAzB;AAEP,OAAO,MAAMK,SAAS,GAAIC,MAAD,IAAYf,KAAK,CAACa,GAAN,CAAW,GAAEJ,QAAS,IAAGM,MAAO,EAAhC,CAA9B;AAEP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAajB,KAAK,CAACkB,IAAN,CAAWT,QAAX,EAAqBQ,OAArB,EAA8BX,MAA9B,CAAhC;AAEP,OAAO,MAAMa,UAAU,GAAG,CAACJ,MAAD,EAASK,UAAT,KAAwBpB,KAAK,CAACkB,IAAN,CAAY,GAAET,QAAS,IAAGM,MAAO,EAAjC,EAAoCK,UAApC,EAAgDd,MAAhD,CAA3C;AAEP,OAAO,MAAMe,UAAU,GAAIN,MAAD,IAAYf,KAAK,CAACsB,MAAN,CAAc,GAAEb,QAAS,IAAGM,MAAO,EAAnC,EAAsCT,MAAtC,CAA/B;AAEP,OAAO,MAAMiB,KAAK,GAAIC,SAAD,IAAexB,KAAK,CAACkB,IAAN,CAAWR,QAAX,EAAqBc,SAArB,CAA7B;AAEP,OAAO,MAAMC,iBAAiB,GAAIC,MAAD,IAAY1B,KAAK,CAACa,GAAN,CAAW,GAAEF,QAAS,IAAGe,MAAO,EAAhC,CAAtC;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACD,MAAD,EAASE,UAAT,KAAwB5B,KAAK,CAAC6B,KAAN,CAAa,GAAElB,QAAS,IAAGe,MAAO,EAAlC,EAAqCE,UAArC,EAAiDtB,MAAjD,CAA3C;AAEP,OAAO,MAAMwB,UAAU,GAAIF,UAAD,IAAgB5B,KAAK,CAACkB,IAAN,CAAWP,QAAX,EAAqBiB,UAArB,CAAnC","sourcesContent":["import axios from 'axios';\n\n\n// set token\nlet token = JSON.parse(localStorage.getItem('auth'))?.token;\nlet config = null;\nif (token) {\n  config = { \n    headers: { \n      \"x-auth-token\": token\n    }\n  }\n} \n\nconst BASEURL = 'http://localhost:5000';\n\nconst postsURL =`${BASEURL}/posts`;\n\nconst logInURL = `${BASEURL}/auth/login`;\n\nconst usersURL = `${BASEURL}/users`\n\nexport const fetchPosts = () => axios.get(postsURL);\n\nexport const fetchPost = (postId) => axios.get(`${postsURL}/${postId}`);\n\nexport const createPost = (newPost) => axios.post(postsURL, newPost, config);\n\nexport const updatePost = (postId, postParams) => axios.post(`${postsURL}/${postId}`, postParams, config)\n\nexport const deletePost = (postId) => axios.delete(`${postsURL}/${postId}`, config);\n\nexport const logIn = (logInData) => axios.post(logInURL, logInData);\n\nexport const fetchLoggedInUser = (userId) => axios.get(`${usersURL}/${userId}`);\n\nexport const updateUser = (userId, userParams) => axios.patch(`${usersURL}/${userId}`, userParams, config)\n\nexport const createUser = (userParams) => axios.post(usersURL, userParams);\n"]},"metadata":{},"sourceType":"module"}