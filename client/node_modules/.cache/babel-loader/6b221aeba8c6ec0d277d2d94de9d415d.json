{"ast":null,"code":"import { FETCH_STICKY_MESSAGES, CREATE_STICKY_MESSAGE, DELETE_STICKY_MESSAGE, UPDATE_STICKY_MESSAGE } from '../types/index';\nexport default ((stickyMessages = null, action) => {\n  switch (action.type) {\n    case FETCH_STICKY_MESSAGES:\n      return action.payload;\n\n    case CREATE_STICKY_MESSAGE:\n      return [...stickyMessages, action.payload];\n\n    case UPDATE_STICKY_MESSAGE:\n      let updatedStickyMessages = stickyMessages.map(msg => {\n        if (msg._id === action.payload._id) {\n          console.log(\"FOUND IT\");\n          console.log(action.payload);\n          return action.payload;\n        } else {\n          return msg;\n        }\n      });\n      return updatedStickyMessages;\n\n    case DELETE_STICKY_MESSAGE:\n      return stickyMessages.filter(project => project._id !== action.payload);\n\n    default:\n      return stickyMessages;\n  }\n});","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/reducers/stickyMessages.js"],"names":["FETCH_STICKY_MESSAGES","CREATE_STICKY_MESSAGE","DELETE_STICKY_MESSAGE","UPDATE_STICKY_MESSAGE","stickyMessages","action","type","payload","updatedStickyMessages","map","msg","_id","console","log","filter","project"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,EAAuDC,qBAAvD,EAA8EC,qBAA9E,QAA2G,gBAA3G;AAEA,gBAAe,CAACC,cAAc,GAAG,IAAlB,EAAwBC,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,qBAAL;AACE,aAAOK,MAAM,CAACE,OAAd;;AACF,SAAKN,qBAAL;AACE,aAAO,CAAC,GAAGG,cAAJ,EAAoBC,MAAM,CAACE,OAA3B,CAAP;;AACF,SAAKJ,qBAAL;AACE,UAAIK,qBAAqB,GAAGJ,cAAc,CAACK,GAAf,CAAmBC,GAAG,IAAI;AACpD,YAAIA,GAAG,CAACC,GAAJ,KAAYN,MAAM,CAACE,OAAP,CAAeI,GAA/B,EAAoC;AAClCC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACE,OAAnB;AACA,iBAAOF,MAAM,CAACE,OAAd;AACD,SAJD,MAIO;AACL,iBAAOG,GAAP;AACD;AACF,OAR2B,CAA5B;AASA,aAAOF,qBAAP;;AACF,SAAKN,qBAAL;AACE,aAAOE,cAAc,CAACU,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACJ,GAAR,KAAgBN,MAAM,CAACE,OAAxD,CAAP;;AACF;AACE,aAAOH,cAAP;AAnBJ;AAqBD,CAtBD","sourcesContent":["import { FETCH_STICKY_MESSAGES, CREATE_STICKY_MESSAGE, DELETE_STICKY_MESSAGE, UPDATE_STICKY_MESSAGE } from '../types/index';\n\nexport default (stickyMessages = null, action) => {\n  switch (action.type) {\n    case FETCH_STICKY_MESSAGES:\n      return action.payload;\n    case CREATE_STICKY_MESSAGE:\n      return [...stickyMessages, action.payload];\n    case UPDATE_STICKY_MESSAGE:\n      let updatedStickyMessages = stickyMessages.map(msg => {\n        if (msg._id === action.payload._id) {\n          console.log(\"FOUND IT\")\n          console.log(action.payload)\n          return action.payload;\n        } else {\n          return msg;\n        }\n      })\n      return updatedStickyMessages;\n    case DELETE_STICKY_MESSAGE:\n      return stickyMessages.filter(project => project._id !== action.payload);\n    default:\n      return stickyMessages;\n  }\n}"]},"metadata":{},"sourceType":"module"}