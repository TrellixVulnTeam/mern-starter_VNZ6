{"ast":null,"code":"import { FETCH_ISSUES, CREATE_ISSUE, DELETE_ISSUE, UPDATE_ISSUE } from '../types/index';\nexport default ((issues = null, action) => {\n  switch (action.type) {\n    case FETCH_ISSUES:\n      return action.payload;\n\n    case CREATE_ISSUE:\n      return [...issues, action.payload];\n\n    case DELETE_ISSUE:\n      return issues.filter(project => project._id !== action.payload);\n\n    case UPDATE_ISSUE:\n      let updatedIssues = issues.map(issue => {\n        if (issue_.id === action.payload._id) {\n          return action.payload._id;\n        } else {\n          return issue;\n        }\n      });\n      return updatedIssues;\n\n    default:\n      return issues;\n  }\n});","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/reducers/issues.js"],"names":["FETCH_ISSUES","CREATE_ISSUE","DELETE_ISSUE","UPDATE_ISSUE","issues","action","type","payload","filter","project","_id","updatedIssues","map","issue","issue_","id"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,YAAnD,QAAuE,gBAAvE;AAEA,gBAAe,CAACC,MAAM,GAAG,IAAV,EAAgBC,MAAhB,KAA2B;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAL;AACE,aAAOK,MAAM,CAACE,OAAd;;AACF,SAAKN,YAAL;AACE,aAAO,CAAC,GAAGG,MAAJ,EAAYC,MAAM,CAACE,OAAnB,CAAP;;AACF,SAAKL,YAAL;AACE,aAAOE,MAAM,CAACI,MAAP,CAAcC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACE,OAAhD,CAAP;;AACF,SAAKJ,YAAL;AACE,UAAIQ,aAAa,GAAGP,MAAM,CAACQ,GAAP,CAAWC,KAAK,IAAI;AACtC,YAAIC,MAAM,CAACC,EAAP,KAAcV,MAAM,CAACE,OAAP,CAAeG,GAAjC,EAAsC;AACpC,iBAAOL,MAAM,CAACE,OAAP,CAAeG,GAAtB;AACD,SAFD,MAEO;AACL,iBAAOG,KAAP;AACD;AACF,OANmB,CAApB;AAOA,aAAOF,aAAP;;AACF;AACE,aAAOP,MAAP;AAjBJ;AAmBD,CApBD","sourcesContent":["import { FETCH_ISSUES, CREATE_ISSUE, DELETE_ISSUE, UPDATE_ISSUE } from '../types/index';\n\nexport default (issues = null, action) => {\n  switch (action.type) {\n    case FETCH_ISSUES:\n      return action.payload;\n    case CREATE_ISSUE:\n      return [...issues, action.payload];\n    case DELETE_ISSUE:\n      return issues.filter(project => project._id !== action.payload);\n    case UPDATE_ISSUE:\n      let updatedIssues = issues.map(issue => {\n        if (issue_.id === action.payload._id) {\n          return action.payload._id;\n        } else {\n          return issue;\n        }\n      })\n      return updatedIssues;\n    default:\n      return issues;\n  }\n}"]},"metadata":{},"sourceType":"module"}