{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_STICKY_MESSAGES, FETCH_STICKY_MESSAGE, CREATE_STICKY_MESSAGE, DELETE_STICKY_MESSAGE, UPDATE_STICKY_MESSAGE } from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js';\nexport const getStickyMessages = (objectType, objectId) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStickyMessages(objectType, objectId);\n    console.log(data);\n    dispatch({\n      type: FETCH_STICKY_MESSAGES,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}; // export const getStickyMessage = (orgId, stickyMessageId) => async (dispatch) => {\n//   try {\n//     const { data } = await api.fetchStickyMessage(orgId, stickyMessageId);\n//     console.log(\"ACTION\")\n//     console.log(data);\n//     dispatch({\n//       type: FETCH_STICKY_MESSAGE,\n//       payload: data\n//     })\n//   } catch (error) {\n//     console.log(error)\n//     errorFlashMessage(error, dispatch, \"danger\");\n//   }\n// }\n\nexport const createStickyMessage = (stickyMessage, objectType, objectId) => async (dispatch, getState) => {\n  try {\n    console.log(\"ACTION\");\n    const {\n      data\n    } = await api.createStickyMessage(stickyMessage, objectType, objectId);\n    console.log(data);\n    dispatch({\n      type: CREATE_STICKY_MESSAGE,\n      payload: data\n    });\n    addFlashMessage(\"stickyMessage successfully created.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}; // export const updateStickyMessage = (stickyMessageId, postParams) => async (dispatch, getState) => {\n//   try {\n//     const { data } = await api.updateStickyMessage(stickyMessageId, postParams, getState().auth.token);\n//     dispatch({\n//       type: UPDATE_STICKY_MESSAGE,\n//       payload: data\n//     });\n//     // addFlashMessage(\"Post successfully updated.\", dispatch)\n//   } catch (error) {\n//     console.log(error);\n//     errorFlashMessage(error, dispatch, \"danger\");\n//   }\n// }\n// export const deleteStickyMessage = (stickyMessageId) => async (dispatch, getState) => {\n//   try {\n//     await api.deleteStickyMessage(stickyMessageId, getState().auth.token);\n//     dispatch({\n//       type: DELETE_STICKY_MESSAGE,\n//       payload: stickyMessageId\n//     });\n//     // addFlashMessage(\"Post successfully deleted.\", dispatch)\n//   } catch (error) {\n//     console.log(error);\n//     errorFlashMessage(error, dispatch, \"danger\");\n//   }\n// }","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/actions/stickyMessages.js"],"names":["api","FETCH_STICKY_MESSAGES","FETCH_STICKY_MESSAGE","CREATE_STICKY_MESSAGE","DELETE_STICKY_MESSAGE","UPDATE_STICKY_MESSAGE","errorFlashMessage","addFlashMessage","getStickyMessages","objectType","objectId","dispatch","data","fetchStickyMessages","console","log","type","payload","error","message","createStickyMessage","stickyMessage","getState"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,EAAsDC,qBAAtD,EAA6EC,qBAA7E,EAAoGC,qBAApG,QAAgI,gBAAhI;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,cAAnD;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B,MAAOC,QAAP,IAAoB;AAC7E,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,GAAG,CAACa,mBAAJ,CAAwBJ,UAAxB,EAAoCC,QAApC,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEf,qBADC;AAEPgB,MAAAA,OAAO,EAAEL;AAFF,KAAD,CAAR;AAID,GARD,CAQE,OAAOM,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,OAAlB;AACAb,IAAAA,iBAAiB,CAACY,KAAD,EAAQP,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMS,mBAAmB,GAAG,CAACC,aAAD,EAAgBZ,UAAhB,EAA4BC,QAA5B,KAAyC,OAAOC,QAAP,EAAiBW,QAAjB,KAA8B;AACxG,MAAI;AAEFR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAMZ,GAAG,CAACoB,mBAAJ,CAAwBC,aAAxB,EAAuCZ,UAAvC,EAAmDC,QAAnD,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,qBADC;AAEPc,MAAAA,OAAO,EAAEL;AAFF,KAAD,CAAR;AAIAL,IAAAA,eAAe,CAAC,qCAAD,EAAwCI,QAAxC,CAAf;AACD,GAXD,CAWE,OAAOO,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAZ,IAAAA,iBAAiB,CAACY,KAAD,EAAQP,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CAhBM,C,CAkBP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as api from '../api';\nimport { FETCH_STICKY_MESSAGES, FETCH_STICKY_MESSAGE, CREATE_STICKY_MESSAGE, DELETE_STICKY_MESSAGE, UPDATE_STICKY_MESSAGE} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\n\nexport const getStickyMessages = (objectType, objectId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchStickyMessages(objectType, objectId);\n    console.log(data)\n\n    dispatch({\n      type: FETCH_STICKY_MESSAGES,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\n// export const getStickyMessage = (orgId, stickyMessageId) => async (dispatch) => {\n//   try {\n//     const { data } = await api.fetchStickyMessage(orgId, stickyMessageId);\n//     console.log(\"ACTION\")\n//     console.log(data);\n//     dispatch({\n//       type: FETCH_STICKY_MESSAGE,\n//       payload: data\n//     })\n//   } catch (error) {\n//     console.log(error)\n//     errorFlashMessage(error, dispatch, \"danger\");\n//   }\n// }\n\nexport const createStickyMessage = (stickyMessage, objectType, objectId) => async (dispatch, getState) => {\n  try {\n    \n    console.log(\"ACTION\")\n    const { data } = await api.createStickyMessage(stickyMessage, objectType, objectId);\n    console.log(data)\n    \n    dispatch({\n      type: CREATE_STICKY_MESSAGE,\n      payload: data\n    });\n    addFlashMessage(\"stickyMessage successfully created.\", dispatch)\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\n// export const updateStickyMessage = (stickyMessageId, postParams) => async (dispatch, getState) => {\n//   try {\n  \n//     const { data } = await api.updateStickyMessage(stickyMessageId, postParams, getState().auth.token);\n//     dispatch({\n//       type: UPDATE_STICKY_MESSAGE,\n//       payload: data\n//     });\n//     // addFlashMessage(\"Post successfully updated.\", dispatch)\n//   } catch (error) {\n//     console.log(error);\n//     errorFlashMessage(error, dispatch, \"danger\");\n//   }\n// }\n\n// export const deleteStickyMessage = (stickyMessageId) => async (dispatch, getState) => {\n//   try {\n//     await api.deleteStickyMessage(stickyMessageId, getState().auth.token);\n//     dispatch({\n//       type: DELETE_STICKY_MESSAGE,\n//       payload: stickyMessageId\n//     });\n//     // addFlashMessage(\"Post successfully deleted.\", dispatch)\n//   } catch (error) {\n//     console.log(error);\n//     errorFlashMessage(error, dispatch, \"danger\");\n//   }\n// }"]},"metadata":{},"sourceType":"module"}