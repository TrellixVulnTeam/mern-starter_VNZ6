{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/mern-boilerplate/client/src/components/pages/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser, updateUser } from '../../actions/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\"\n  });\n  useEffect(() => {\n    dispatch(getUser(auth.user._id));\n  }, []);\n\n  if (user && formData.username === \"\" && formData.email === \"\") {\n    setFormData({\n      email: user.email,\n      username: user.username\n    });\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(updateUser(auth.user._id, formData));\n    console.log(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-page\",\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setFormData({ ...formData,\n              email: e.target.value\n            }),\n            value: formData.email,\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setFormData({ ...formData,\n              username: e.target.value\n            }),\n            value: formData.username,\n            type: \"text\",\n            className: \"form-control\",\n            id: \"username\",\n            \"aria-describedby\": \"usernameHelp\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"EZqAJyiwbYXDKd1pqJfMDGEGpIo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/mymac/repos/mern-boilerplate/client/src/components/pages/Account.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getUser","updateUser","Account","history","match","user","state","auth","dispatch","formData","setFormData","email","username","_id","handleSubmit","event","preventDefault","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser, updateUser } from '../../actions/users';\n\nconst Account = ({ history, match }) => {\n\n  const user = useSelector((state) => state.user);\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  \n  const [formData, setFormData] = useState ({\n    email: \"\",\n    username: \"\"\n  });\n\n  useEffect(() => {\n    dispatch(getUser(auth.user._id));\n  }, []);\n\n  if (user && formData.username === \"\" && formData.email === \"\") {\n    setFormData({\n      email: user.email,\n      username: user.username\n    });\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(updateUser(auth.user._id, formData));\n    console.log(formData)\n  }\n\n  return (\n    <div className=\"user-page\">\n      {user && (\n        <div>\n          <h1>Edit Profile</h1>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email address</label>\n              <input onChange={(e) => setFormData({ ...formData, email: e.target.value})} value={formData.email} type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input onChange={(e) => setFormData({ ...formData, username: e.target.value})} value={formData.username} type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter email\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n          </form>\n        </div> \n      )}\n    </div>\n  );\n}\n\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}