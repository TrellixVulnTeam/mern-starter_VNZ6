{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/issue-tracker-mern/client/src/components/stickyMessages/UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { updateIssue } from '../../actions/issues';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateStickyMessage } from '../../actions/stickyMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateForm = ({\n  stickyMessage,\n  toggleEditMode\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    title: stickyMessage.title,\n    body: stickyMessage.body\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toggleEditMode();\n    console.log(formData); //dispatch(updateStickyMessage(org._id, project._id, issue._id, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        id: \"headingOne\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: formData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `collapse-${stickyMessage._id}`,\n        className: \"collapse\",\n        \"aria-labelledby\": \"headingOne\",\n        \"data-parent\": \"#sticky-message-accordion\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: stickyMessage.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateForm, \"zWiALekVL39/QJACXWuLLXYDzdw=\");\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/components/stickyMessages/UpdateForm.js"],"names":["React","useState","updateIssue","useDispatch","useSelector","updateStickyMessage","UpdateForm","stickyMessage","toggleEditMode","formData","setFormData","title","body","handleSubmit","e","preventDefault","console","log","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,8BAApC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAuC;AAAA;;AAExD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,KAAK,EAAEJ,aAAa,CAACI,KADkB;AAEvCC,IAAAA,IAAI,EAAEL,aAAa,CAACK;AAFmB,GAAD,CAAxC;;AAKA,QAAMC,YAAY,GAAIC,CAAD,IAAQ;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,cAAc;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAH2B,CAI3B;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAC,YAAhC;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,KAAK,EAAEA,QAAQ,CAACE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,EAAE,EAAG,YAAWJ,aAAa,CAACW,GAAI,EAAvC;AAA0C,QAAA,SAAS,EAAC,UAApD;AAA+D,2BAAgB,YAA/E;AAA4F,uBAAY,2BAAxG;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACGX,aAAa,CAACK;AADjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9BD;;GAAMN,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { updateIssue } from '../../actions/issues';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateStickyMessage } from '../../actions/stickyMessages';\n\nconst UpdateForm = ({ stickyMessage, toggleEditMode }) => {\n\n  const [formData, setFormData] = useState({\n    title: stickyMessage.title,\n    body: stickyMessage.body\n  });\n\n  const handleSubmit = (e) =>  {\n    e.preventDefault();\n    toggleEditMode();\n    console.log(formData)\n    //dispatch(updateStickyMessage(org._id, project._id, issue._id, formData));\n  }\n\n  return (\n    <div className=\"card\">\n      <form>\n        <div className=\"card-header\" id=\"headingOne\">\n            <input className=\"form-control\" value={formData.title} />\n\n        </div>\n\n        <div id={`collapse-${stickyMessage._id}`} className=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#sticky-message-accordion\">\n          <div className=\"card-body\">\n            {stickyMessage.body}\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default UpdateForm\n"]},"metadata":{},"sourceType":"module"}