{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/issue-tracker-mern/client/src/components/comments/CommentsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CommentListItem from './CommentListItem';\nimport Form from './Form';\nimport { useDispatch } from 'react-redux';\nimport { getComments } from '../../actions/comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsList = ({\n  parent\n}) => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    let response = await dispatch(getComments(\"issue\", parent._id));\n    setComments(response);\n  }, []);\n\n  const deleteLocalComment = id => {\n    let updatedComments = comments.filter(com => {\n      if (com._id !== id) {\n        return com;\n      }\n    });\n    setComments(updatedComments);\n  };\n\n  const addLocalComment = comment => {\n    setComments([...comments, comment]);\n    console.log(comments);\n  };\n\n  const renderComments = () => {\n    return comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(CommentListItem, {\n        comment: comment,\n        deleteLocalComment: deleteLocalComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  if (!comments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-list\",\n    children: [renderComments(), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      parent: parent,\n      addLocalComment: addLocalComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentsList, \"dFKg6H7ooFwcxq9+l/jrjF5+osI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CommentsList;\nexport default CommentsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/components/comments/CommentsList.js"],"names":["React","useEffect","useState","CommentListItem","Form","useDispatch","getComments","CommentsList","parent","comments","setComments","dispatch","response","_id","deleteLocalComment","id","updatedComments","filter","com","addLocalComment","comment","console","log","renderComments","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,QAAQ,GAAGN,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIW,QAAQ,GAAG,MAAMD,QAAQ,CAACL,WAAW,CAAC,OAAD,EAAUE,MAAM,CAACK,GAAjB,CAAZ,CAA7B;AACAH,IAAAA,WAAW,CAACE,QAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAME,kBAAkB,GAAIC,EAAD,IAAQ;AACjC,QAAIC,eAAe,GAAGP,QAAQ,CAACQ,MAAT,CAAgBC,GAAG,IAAI;AAC3C,UAAIA,GAAG,CAACL,GAAJ,KAAYE,EAAhB,EAAoB;AAAE,eAAOG,GAAP;AAAY;AACnC,KAFqB,CAAtB;AAGAR,IAAAA,WAAW,CAACM,eAAD,CAAX;AACD,GALD;;AAOA,QAAMG,eAAe,GAAIC,OAAD,IAAa;AACnCV,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,OAAd,CAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACD,GAHD;;AAMA,QAAMc,cAAc,GAAG,MAAM;AAC3B,WAAOd,QAAQ,CAACe,GAAT,CAAaJ,OAAO,IAAI;AAC7B,0BAAO,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEA,OAA1B;AAAmC,QAAA,kBAAkB,EAAEN;AAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAKA,MAAI,CAACL,QAAL,EAAe;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA6B;;AAC9C,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGc,cAAc,EADjB,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEf,MAAd;AAAsB,MAAA,eAAe,EAAEW;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCD;;GAAMZ,Y;UAEaF,W;;;KAFbE,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport CommentListItem from './CommentListItem';\nimport Form from './Form';\nimport { useDispatch } from 'react-redux';\nimport { getComments } from '../../actions/comments';\n\nconst CommentsList = ({parent}) => {\n  const [comments, setComments] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    let response = await dispatch(getComments(\"issue\", parent._id));\n    setComments(response); \n  }, [])\n\n  const deleteLocalComment = (id) => {\n    let updatedComments = comments.filter(com => {\n      if (com._id !== id) { return com;}\n    })\n    setComments(updatedComments);\n  }\n\n  const addLocalComment = (comment) => {\n    setComments([...comments, comment]);\n    console.log(comments);\n  }\n\n\n  const renderComments = () => {\n    return comments.map(comment => {\n      return <CommentListItem comment={comment} deleteLocalComment={deleteLocalComment} />\n    })\n  }\n  if (!comments) { return <div>Loading...</div>}\n  return (\n    <div className=\"comments-list\">\n      {renderComments()}\n      <hr />\n      <Form parent={parent} addLocalComment={addLocalComment}/>\n    </div>\n  )\n}\n\nexport default CommentsList\n"]},"metadata":{},"sourceType":"module"}