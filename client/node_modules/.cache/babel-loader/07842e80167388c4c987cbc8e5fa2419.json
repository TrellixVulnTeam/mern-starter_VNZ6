{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_COMMENTS, FETCH_COMMENT, CREATE_COMMENT, DELETE_COMMENT, UPDATE_COMMENT } from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js';\nexport const getComments = (objectType, objectId) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchComments(objectType, objectId);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const createComment = (comment, objectType, objectId) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.createComment(comment, objectType, objectId);\n    dispatch({\n      type: CREATE_COMMENT,\n      payload: data\n    });\n    addFlashMessage(\"Comment successfully created.\", dispatch);\n    return data;\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const deleteComment = commentId => async dispatch => {\n  try {\n    await api.deleteComment(commentId);\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: commentId\n    });\n    addFlashMessage(\"Comment successfully deleted.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/actions/comments.js"],"names":["api","FETCH_COMMENTS","FETCH_COMMENT","CREATE_COMMENT","DELETE_COMMENT","UPDATE_COMMENT","errorFlashMessage","addFlashMessage","getComments","objectType","objectId","dispatch","data","fetchComments","error","console","log","message","createComment","comment","getState","type","payload","deleteComment","commentId"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,cAAxC,EAAwDC,cAAxD,EAAwEC,cAAxE,QAA6F,gBAA7F;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,cAAnD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B,MAAOC,QAAP,IAAoB;AACvE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,GAAG,CAACa,aAAJ,CAAkBJ,UAAlB,EAA8BC,QAA9B,CAAvB;AACA,WAAOE,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACAX,IAAAA,iBAAiB,CAACQ,KAAD,EAAQH,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CARM;AAUP,OAAO,MAAMO,aAAa,GAAG,CAACC,OAAD,EAAUV,UAAV,EAAsBC,QAAtB,KAAmC,OAAOC,QAAP,EAAiBS,QAAjB,KAA8B;AAC5F,MAAI;AACF,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAMZ,GAAG,CAACkB,aAAJ,CAAkBC,OAAlB,EAA2BV,UAA3B,EAAuCC,QAAvC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAElB,cADC;AAEPmB,MAAAA,OAAO,EAAEV;AAFF,KAAD,CAAR;AAIAL,IAAAA,eAAe,CAAC,+BAAD,EAAkCI,QAAlC,CAAf;AACA,WAAOC,IAAP;AACD,GARD,CAQE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,IAAAA,iBAAiB,CAACQ,KAAD,EAAQH,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CAbM;AAeP,OAAO,MAAMY,aAAa,GAAIC,SAAD,IAAe,MAAOb,QAAP,IAAoB;AAC9D,MAAI;AACF,UAAMX,GAAG,CAACuB,aAAJ,CAAkBC,SAAlB,CAAN;AACAb,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEjB,cADC;AAEPkB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAIAjB,IAAAA,eAAe,CAAC,+BAAD,EAAkCI,QAAlC,CAAf;AACD,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,IAAAA,iBAAiB,CAACQ,KAAD,EAAQH,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CAZM","sourcesContent":["import * as api from '../api';\nimport { FETCH_COMMENTS, FETCH_COMMENT, CREATE_COMMENT, DELETE_COMMENT, UPDATE_COMMENT} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\nexport const getComments = (objectType, objectId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchComments(objectType, objectId);\n    return data;   \n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const createComment = (comment, objectType, objectId) => async (dispatch, getState) => {\n  try {\n    const { data } = await api.createComment(comment, objectType, objectId);\n    dispatch({\n      type: CREATE_COMMENT,\n      payload: data\n    });\n    addFlashMessage(\"Comment successfully created.\", dispatch);\n    return data;\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const deleteComment = (commentId) => async (dispatch) => {\n  try {\n    await api.deleteComment(commentId);\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: commentId\n    });\n    addFlashMessage(\"Comment successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}"]},"metadata":{},"sourceType":"module"}