{"ast":null,"code":"import * as api from '../api';\nimport { errorFlashMessage } from './helpers';\nimport { FETCH_USER, CREATE_USER, UPDATE_USER } from '../types/index';\nexport const getUser = userId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchLoggedInUser(userId);\n    dispatch({\n      type: FETCH_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const createUser = userParams => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createUser(userParams);\n    localStorage.setItem('auth', JSON.stringify(data));\n    dispatch({\n      type: CREATE_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const updateUser = (userId, userParams) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.updateUser(userId, userParams, getState().auth.token);\n    console.log(data);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/mern-boilerplate/client/src/actions/users.js"],"names":["api","errorFlashMessage","FETCH_USER","CREATE_USER","UPDATE_USER","getUser","userId","dispatch","data","fetchLoggedInUser","type","payload","error","console","log","createUser","userParams","localStorage","setItem","JSON","stringify","updateUser","getState","auth","token","message"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAqD,gBAArD;AAEA,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACS,iBAAJ,CAAsBH,MAAtB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,IAAAA,iBAAiB,CAACW,KAAD,EAAQL,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CAXM;AAaP,OAAO,MAAMQ,UAAU,GAAIC,UAAD,IAAgB,MAAOT,QAAP,IAAoB;AAC5D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACe,UAAJ,CAAeC,UAAf,CAAvB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAA7B;AACAD,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,WADC;AAEPQ,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,IAAAA,iBAAiB,CAACW,KAAD,EAAQL,QAAR,EAAkB,QAAlB,CAAjB;AACD;AACF,CAZM;AAcP,OAAO,MAAMc,UAAU,GAAG,CAACf,MAAD,EAASU,UAAT,KAAwB,OAAOT,QAAP,EAAiBe,QAAjB,KAA8B;AAC9E,MAAI;AACF,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACqB,UAAJ,CAAef,MAAf,EAAuBU,UAAvB,EAAmCM,QAAQ,GAAGC,IAAX,CAAgBC,KAAnD,CAAvB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACa,OAAlB;AACD;AACF,CAXM","sourcesContent":["import * as api from '../api';\nimport { errorFlashMessage } from './helpers';\nimport { FETCH_USER, CREATE_USER, UPDATE_USER } from '../types/index';\n\nexport const getUser = (userId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchLoggedInUser(userId);\n    dispatch({\n      type: FETCH_USER,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const createUser = (userParams) => async (dispatch) => {\n  try {\n    const { data } = await api.createUser(userParams);\n    localStorage.setItem('auth', JSON.stringify(data))\n    dispatch({\n      type: CREATE_USER,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const updateUser = (userId, userParams) => async (dispatch, getState) => {\n  try {\n    const { data } = await api.updateUser(userId, userParams, getState().auth.token);\n    console.log(data)\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}