{"ast":null,"code":"var _JSON$parse;\n\nimport axios from 'axios'; // set token if it's in localStorage\n\nlet token = (_JSON$parse = JSON.parse(localStorage.getItem('auth'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\nlet configFromLocalStorage = null;\n\nif (token) {\n  configFromLocalStorage = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n}\n\nconst BASEURL = 'http://localhost:5000';\nconst projectsURL = `${BASEURL}/projects`;\nconst organizationsURL = `${BASEURL}/organizations`;\nconst logInURL = `${BASEURL}/auth/login`;\nconst usersURL = `${BASEURL}/users`;\nconst stickyMessagesURL = `${BASEURL}/stickyMessages`; // Projects\n\nexport const fetchProjects = orgId => {\n  return axios.get(`${organizationsURL}/${orgId}/projects`);\n};\nexport const createProject = (newProject, orgId, userToken = token) => {\n  console.log(\"URL\");\n  console.log(`${organizationsURL}/${orgId}/projects`);\n  return axios.post(`${organizationsURL}/${orgId}/projects`, newProject, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const fetchProject = (orgId, projectId) => {\n  console.log('url');\n  console.log(`${organizationsURL}/${orgId}/projects${projectId}`);\n  return axios.get(`${organizationsURL}/${orgId}/projects/${projectId}`);\n};\nexport const updateProject = (projectId, postParams, userToken = token) => {\n  return axios.patch(`${projectsURL}/${projectId}`, postParams, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const deleteProject = (projectId, userToken = token) => {\n  console.log(userToken);\n  return axios.delete(`${projectsURL}/${projectId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n}; // Organizations\n\nexport const fetchOrganizations = (userToken = token) => {\n  return axios.get(organizationsURL, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const createOrganization = (newOrganization, userToken = token) => {\n  return axios.post(organizationsURL, newOrganization, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const fetchOrganization = (organizationId, userToken = token) => {\n  return axios.get(`${organizationsURL}/${organizationId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const updateOrganization = (organizationId, organizationParams, userToken = token) => {\n  return axios.patch(`${organizationsURL}/${organizationId}`, organizationParams, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const deleteOrganization = (organizationId, userToken = token) => {\n  return axios.delete(`${organizationsURL}/${organizationId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n}; // Users\n\nexport const logIn = logInData => axios.post(logInURL, logInData);\nexport const fetchLoggedInUser = userId => axios.get(`${usersURL}/${userId}`);\nexport const updateUser = (userId, userParams, config = configFromLocalStorage) => axios.patch(`${usersURL}/${userId}`, userParams, config);\nexport const createUser = userParams => axios.post(usersURL, userParams); // StickyMessages\n\nexport const fetchStickyMessages = (objectType, objectId, userToken = token) => {\n  return axios.get(`${stickyMessagesURL}/${objectType}/${objectId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n}; // export const createProject = (newProject, orgId, userToken = token) =>  {\n//   console.log(\"URL\")\n//   console.log(`${organizationsURL}/${orgId}/projects`)\n//   return axios.post(`${organizationsURL}/${orgId}/projects`, newProject, {\n//     headers: { \n//       \"x-auth-token\": userToken\n//     }\n//   });\n// }\n// export const fetchProject = (orgId, projectId) =>  { \n//   console.log('url')\n//   console.log(`${organizationsURL}/${orgId}/projects${projectId}`)\n//   return axios.get(`${organizationsURL}/${orgId}/projects/${projectId}`);\n// }\n// export const updateProject = (projectId, postParams, userToken = token) => {\n//   return axios.patch(`${projectsURL}/${projectId}`, postParams, {\n//     headers: { \n//       \"x-auth-token\": userToken\n//     }\n//   })\n// }\n// export const deleteProject = (projectId, userToken = token) =>  {\n//   console.log(userToken)\n//   return axios.delete(`${projectsURL}/${projectId}`, {\n//     headers: { \n//       \"x-auth-token\": userToken\n//     }\n//   });\n// }","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/api/index.js"],"names":["axios","token","JSON","parse","localStorage","getItem","configFromLocalStorage","headers","BASEURL","projectsURL","organizationsURL","logInURL","usersURL","stickyMessagesURL","fetchProjects","orgId","get","createProject","newProject","userToken","console","log","post","fetchProject","projectId","updateProject","postParams","patch","deleteProject","delete","fetchOrganizations","createOrganization","newOrganization","fetchOrganization","organizationId","updateOrganization","organizationParams","deleteOrganization","logIn","logInData","fetchLoggedInUser","userId","updateUser","userParams","config","createUser","fetchStickyMessages","objectType","objectId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n// set token if it's in localStorage\nlet token = JSON.parse(localStorage.getItem('auth'))?.token;\nlet configFromLocalStorage = null;\nif (token) {\n  configFromLocalStorage = { \n    headers: { \n      \"x-auth-token\": token\n    }\n  }\n} \n\nconst BASEURL = 'http://localhost:5000';\n\nconst projectsURL =`${BASEURL}/projects`;\n\nconst organizationsURL =`${BASEURL}/organizations`;\n\nconst logInURL = `${BASEURL}/auth/login`;\n\nconst usersURL = `${BASEURL}/users`;\n\nconst stickyMessagesURL = `${BASEURL}/stickyMessages`;\n\n\n\n// Projects\n\nexport const fetchProjects = (orgId) => {\n  return axios.get(`${organizationsURL}/${orgId}/projects`);\n}\n\nexport const createProject = (newProject, orgId, userToken = token) =>  {\n  console.log(\"URL\")\n  console.log(`${organizationsURL}/${orgId}/projects`)\n  return axios.post(`${organizationsURL}/${orgId}/projects`, newProject, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n\nexport const fetchProject = (orgId, projectId) =>  { \n  console.log('url')\n  console.log(`${organizationsURL}/${orgId}/projects${projectId}`)\n  return axios.get(`${organizationsURL}/${orgId}/projects/${projectId}`);\n}\n\n\nexport const updateProject = (projectId, postParams, userToken = token) => {\n  return axios.patch(`${projectsURL}/${projectId}`, postParams, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  })\n}\n\nexport const deleteProject = (projectId, userToken = token) =>  {\n  console.log(userToken)\n  return axios.delete(`${projectsURL}/${projectId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n\n// Organizations\nexport const fetchOrganizations = (userToken = token) => {\n  return axios.get(organizationsURL, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n} \n\nexport const createOrganization = (newOrganization, userToken = token) =>  {\n  return axios.post(organizationsURL, newOrganization, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n\nexport const fetchOrganization = (organizationId, userToken = token) => {\n  return axios.get(`${organizationsURL}/${organizationId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n\nexport const updateOrganization = (organizationId, organizationParams, userToken = token) => {\n  return axios.patch(`${organizationsURL}/${organizationId}`, organizationParams, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  })\n}\n\nexport const deleteOrganization = (organizationId, userToken = token) =>  {\n  return axios.delete(`${organizationsURL}/${organizationId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n\n\n// Users\n\nexport const logIn = (logInData) => axios.post(logInURL, logInData);\n\nexport const fetchLoggedInUser = (userId) => axios.get(`${usersURL}/${userId}`);\n\nexport const updateUser = (userId, userParams, config = configFromLocalStorage) => axios.patch(`${usersURL}/${userId}`, userParams, config)\n\nexport const createUser = (userParams) => axios.post(usersURL, userParams);\n\n\n// StickyMessages\n\nexport const fetchStickyMessages = (objectType, objectId, userToken = token) => {\n  return axios.get(`${stickyMessagesURL}/${objectType}/${objectId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n// export const createProject = (newProject, orgId, userToken = token) =>  {\n//   console.log(\"URL\")\n//   console.log(`${organizationsURL}/${orgId}/projects`)\n//   return axios.post(`${organizationsURL}/${orgId}/projects`, newProject, {\n//     headers: { \n//       \"x-auth-token\": userToken\n//     }\n//   });\n// }\n\n\n// export const fetchProject = (orgId, projectId) =>  { \n//   console.log('url')\n//   console.log(`${organizationsURL}/${orgId}/projects${projectId}`)\n//   return axios.get(`${organizationsURL}/${orgId}/projects/${projectId}`);\n// }\n\n\n// export const updateProject = (projectId, postParams, userToken = token) => {\n//   return axios.patch(`${projectsURL}/${projectId}`, postParams, {\n//     headers: { \n//       \"x-auth-token\": userToken\n//     }\n//   })\n// }\n\n// export const deleteProject = (projectId, userToken = token) =>  {\n//   console.log(userToken)\n//   return axios.delete(`${projectsURL}/${projectId}`, {\n//     headers: { \n//       \"x-auth-token\": userToken\n//     }\n//   });\n// }"]},"metadata":{},"sourceType":"module"}