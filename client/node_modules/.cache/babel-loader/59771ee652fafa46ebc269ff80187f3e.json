{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_ORGANIZATIONS, FETCH_ORGANIZATION, CREATE_ORGANIZATION, DELETE_ORGANIZATION, UPDATE_ORGANIZATION } from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js';\nexport const getOrganizations = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchOrganization(getState().auth.token);\n    dispatch({\n      type: FETCH_ORGANIZATIONS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const getOrganization = organizationId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchOrganization(organizationId);\n    dispatch({\n      type: FETCH_ORGANIZATION,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const createOrganization = organization => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.createOrganization(organization, getState().auth.token);\n    console.log(data);\n    dispatch({\n      type: CREATE_ORGANIZATION,\n      payload: data\n    });\n    addFlashMessage(\"Organization successfully created.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const updateOrganization = (organizationId, organizationParams) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.updateOrganization(organizationId, organizationParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_ORGANIZATION,\n      payload: data\n    });\n    addFlashMessage(\"Organization successfully updated.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const deleteOrganization = organizationId => async (dispatch, getState) => {\n  try {\n    await api.deleteOrganization(organizationId, getState().auth.token);\n    dispatch({\n      type: DELETE_ORGANIZATION,\n      payload: organizationId\n    });\n    addFlashMessage(\"Organization successfully deleted.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/actions/organizations.js"],"names":["api","FETCH_ORGANIZATIONS","FETCH_ORGANIZATION","CREATE_ORGANIZATION","DELETE_ORGANIZATION","UPDATE_ORGANIZATION","errorFlashMessage","addFlashMessage","getOrganizations","dispatch","data","fetchOrganization","getState","auth","token","type","payload","error","console","log","message","getOrganization","organizationId","createOrganization","organization","updateOrganization","organizationParams","deleteOrganization"],"mappings":"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","sourcesContent":["import * as api from '../api';\nimport { FETCH_ORGANIZATIONS, FETCH_ORGANIZATION, CREATE_ORGANIZATION, DELETE_ORGANIZATION, UPDATE_ORGANIZATION} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\n\nexport const getOrganizations = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchOrganization(getState().auth.token);\n    dispatch({\n      type: FETCH_ORGANIZATIONS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const getOrganization= (organizationId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchOrganization(organizationId);\n    dispatch({\n      type: FETCH_ORGANIZATION,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const createOrganization= (organization) => async (dispatch, getState) => {\n  try {\n    const { data } = await api.createOrganization(organization, getState().auth.token);\n    console.log(data)\n\n    dispatch({\n      type: CREATE_ORGANIZATION,\n      payload: data\n    });\n    addFlashMessage(\"Organization successfully created.\", dispatch)\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const updateOrganization = (organizationId, organizationParams) => async (dispatch, getState) => {\n  try {\n  \n    const { data } = await api.updateOrganization(organizationId, organizationParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_ORGANIZATION,\n      payload: data\n    });\n    addFlashMessage(\"Organization successfully updated.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const deleteOrganization = (organizationId) => async (dispatch, getState) => {\n  try {\n    await api.deleteOrganization(organizationId, getState().auth.token);\n    dispatch({\n      type: DELETE_ORGANIZATION,\n      payload: organizationId\n    });\n    addFlashMessage(\"Organization successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}"]},"metadata":{},"sourceType":"module"}