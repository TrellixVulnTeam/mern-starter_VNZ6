{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_PROJECTS, FETCH_PROJECT, CREATE_PROJECT, DELETE_PROJECT, UPDATE_PROJECT } from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js';\nexport const getProjects = orgId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchProjects(orgId);\n    dispatch({\n      type: FETCH_PROJECTS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const getProject = (orgId, projectId) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchProject(orgId, projectId);\n    dispatch({\n      type: FETCH_PROJECT,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const createProject = (project, orgId) => async (dispatch, getState) => {\n  try {\n    console.log(\"ACTION\");\n    const {\n      data\n    } = await api.createProject(project, orgId, getState().auth.token);\n    console.log(data);\n    dispatch({\n      type: CREATE_PROJECT,\n      payload: data\n    });\n    addFlashMessage(\"Project successfully created.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const updateProject = (projectId, postParams) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.updateProject(projectId, postParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_PROJECT,\n      payload: data\n    }); // addFlashMessage(\"Post successfully updated.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const deleteProject = projectId => async (dispatch, getState) => {\n  try {\n    await api.deleteProject(projectId, getState().auth.token);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: projectId\n    }); // addFlashMessage(\"Post successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/actions/projects.js"],"names":["api","FETCH_PROJECTS","FETCH_PROJECT","CREATE_PROJECT","DELETE_PROJECT","UPDATE_PROJECT","errorFlashMessage","addFlashMessage","getProjects","orgId","dispatch","data","fetchProjects","type","payload","error","console","log","message","getProject","projectId","fetchProject","createProject","project","getState","auth","token","updateProject","postParams","deleteProject"],"mappings":"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","sourcesContent":["import * as api from '../api';\nimport { FETCH_PROJECTS, FETCH_PROJECT, CREATE_PROJECT, DELETE_PROJECT, UPDATE_PROJECT} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\n\nexport const getProjects = (orgId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchProjects(orgId);\n    dispatch({\n      type: FETCH_PROJECTS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const getProject = (orgId, projectId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchProject(orgId, projectId);\n    dispatch({\n      type: FETCH_PROJECT,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const createProject = (project, orgId) => async (dispatch, getState) => {\n  try {\n    \n    console.log(\"ACTION\")\n    const { data } = await api.createProject(project, orgId, getState().auth.token);\n    console.log(data)\n    \n    dispatch({\n      type: CREATE_PROJECT,\n      payload: data\n    });\n    addFlashMessage(\"Project successfully created.\", dispatch)\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const updateProject = (projectId, postParams) => async (dispatch, getState) => {\n  try {\n  \n    const { data } = await api.updateProject(projectId, postParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_PROJECT,\n      payload: data\n    });\n    // addFlashMessage(\"Post successfully updated.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const deleteProject = (projectId) => async (dispatch, getState) => {\n  try {\n    await api.deleteProject(projectId, getState().auth.token);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: projectId\n    });\n    // addFlashMessage(\"Post successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}"]},"metadata":{},"sourceType":"module"}