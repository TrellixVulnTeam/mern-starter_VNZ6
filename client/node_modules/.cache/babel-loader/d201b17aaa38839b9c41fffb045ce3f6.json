{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_STICKY_MESSAGES, FETCH_STICKY_MESSAGE, CREATE_STICKY_MESSAGE, DELETE_STICKY_MESSAGE, UPDATE_STICKY_MESSAGE } from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js';\nexport const getStickyMessages = orgId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStickyMessages(orgId);\n    console.log(data);\n    dispatch({\n      type: FETCH_STICKY_MESSAGES,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const getStickyMessage = (orgId, stickyMessageId) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStickyMessage(orgId, stickyMessageId);\n    console.log(\"ACTION\");\n    console.log(data);\n    dispatch({\n      type: FETCH_STICKY_MESSAGE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const createStickyMessage = (stickyMessage, orgId) => async (dispatch, getState) => {\n  try {\n    console.log(\"ACTION\");\n    const {\n      data\n    } = await api.createStickyMessage(stickyMessage, orgId, getState().auth.token);\n    console.log(data);\n    dispatch({\n      type: CREATE_STICKY_MESSAGE,\n      payload: data\n    });\n    addFlashMessage(\"stickyMessage successfully created.\", dispatch);\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const updateStickyMessage = (stickyMessageId, postParams) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.updateStickyMessage(stickyMessageId, postParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_STICKY_MESSAGE,\n      payload: data\n    }); // addFlashMessage(\"Post successfully updated.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};\nexport const deleteStickyMessage = stickyMessageId => async (dispatch, getState) => {\n  try {\n    await api.deleteStickyMessage(stickyMessageId, getState().auth.token);\n    dispatch({\n      type: DELETE_STICKY_MESSAGE,\n      payload: stickyMessageId\n    }); // addFlashMessage(\"Post successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/issue-tracker-mern/client/src/actions/stickyMessages.js"],"names":["api","FETCH_STICKY_MESSAGES","FETCH_STICKY_MESSAGE","CREATE_STICKY_MESSAGE","DELETE_STICKY_MESSAGE","UPDATE_STICKY_MESSAGE","errorFlashMessage","addFlashMessage","getStickyMessages","orgId","dispatch","data","fetchStickyMessages","console","log","type","payload","error","message","getStickyMessage","stickyMessageId","fetchStickyMessage","createStickyMessage","stickyMessage","getState","auth","token","updateStickyMessage","postParams","deleteStickyMessage"],"mappings":"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","sourcesContent":["import * as api from '../api';\nimport { FETCH_STICKY_MESSAGES, FETCH_STICKY_MESSAGE, CREATE_STICKY_MESSAGE, DELETE_STICKY_MESSAGE, UPDATE_STICKY_MESSAGE} from '../types/index';\nimport { errorFlashMessage, addFlashMessage } from './helpers.js'; \n\n\nexport const getStickyMessages = (orgId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchStickyMessages(orgId);\n    console.log(data)\n\n    dispatch({\n      type: FETCH_STICKY_MESSAGES,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const getStickyMessage = (orgId, stickyMessageId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchStickyMessage(orgId, stickyMessageId);\n    console.log(\"ACTION\")\n    console.log(data);\n    dispatch({\n      type: FETCH_STICKY_MESSAGE,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const createStickyMessage = (stickyMessage, orgId) => async (dispatch, getState) => {\n  try {\n    \n    console.log(\"ACTION\")\n    const { data } = await api.createStickyMessage(stickyMessage, orgId, getState().auth.token);\n    console.log(data)\n    \n    dispatch({\n      type: CREATE_STICKY_MESSAGE,\n      payload: data\n    });\n    addFlashMessage(\"stickyMessage successfully created.\", dispatch)\n  } catch (error) {\n    console.log(error)\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const updateStickyMessage = (stickyMessageId, postParams) => async (dispatch, getState) => {\n  try {\n  \n    const { data } = await api.updateStickyMessage(stickyMessageId, postParams, getState().auth.token);\n    dispatch({\n      type: UPDATE_STICKY_MESSAGE,\n      payload: data\n    });\n    // addFlashMessage(\"Post successfully updated.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}\n\nexport const deleteStickyMessage = (stickyMessageId) => async (dispatch, getState) => {\n  try {\n    await api.deleteStickyMessage(stickyMessageId, getState().auth.token);\n    dispatch({\n      type: DELETE_STICKY_MESSAGE,\n      payload: stickyMessageId\n    });\n    // addFlashMessage(\"Post successfully deleted.\", dispatch)\n  } catch (error) {\n    console.log(error);\n    errorFlashMessage(error, dispatch, \"danger\");\n  }\n}"]},"metadata":{},"sourceType":"module"}